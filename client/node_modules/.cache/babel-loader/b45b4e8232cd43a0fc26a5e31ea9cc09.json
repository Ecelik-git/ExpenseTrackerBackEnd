{"ast":null,"code":"import _toConsumableArray from \"/Users/lvn/Desktop/expensetracker-backend/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/lvn/Desktop/expensetracker-backend/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nexport default (function (state, action) {\n  switch (action.type) {\n    case 'GET_TRANSACTIONS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false,\n        transactions: action.payload\n      });\n\n    case 'DELETE_TRANSACTION':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        transactions: state.transactions.filter(function (transaction) {\n          return transaction.id !== action.payload;\n        })\n      });\n\n    case 'ADD_TRANSACTION':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        transactions: [,].concat(_toConsumableArray(state.transactions))\n      });\n\n    case 'TRANSACTION_ERROR':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: action.payload\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/lvn/Desktop/expensetracker-backend/client/src/context/AppReducer.js"],"names":["state","action","type","loading","transactions","payload","filter","transaction","id","error"],"mappings":";;AAAA,gBAAe,UAACA,KAAD,EAAQC,MAAR,EAAkB;AAC7B,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,kBAAL;AACI,6CACOF,KADP;AAEIG,QAAAA,OAAO,EAAE,KAFb;AAGIC,QAAAA,YAAY,EAAEH,MAAM,CAACI;AAHzB;;AAKJ,SAAK,oBAAL;AACI,6CACOL,KADP;AAEII,QAAAA,YAAY,EAACJ,KAAK,CAACI,YAAN,CACZE,MADY,CACL,UAAAC,WAAW;AAAA,iBAAIA,WAAW,CAACC,EAAZ,KAAmBP,MAAM,CAACI,OAA9B;AAAA,SADN;AAFjB;;AAKJ,SAAK,iBAAL;AACI,6CACOL,KADP;AAEII,QAAAA,YAAY,gCAAQJ,KAAK,CAACI,YAAd;AAFhB;;AAIJ,SAAK,mBAAL;AACI,6CACOJ,KADP;AAEIS,QAAAA,KAAK,EAAER,MAAM,CAACI;AAFlB;;AAIJ;AACI,aAAOL,KAAP;AAxBR;AA0BH,CA3BD","sourcesContent":["export default (state, action) =>{\n    switch(action.type){\n        case 'GET_TRANSACTIONS':\n            return {\n                ...state,\n                loading: false,\n                transactions: action.payload\n            }\n        case 'DELETE_TRANSACTION':\n            return {\n                ...state,\n                transactions:state.transactions\n                .filter(transaction => transaction.id !== action.payload)\n            }\n        case 'ADD_TRANSACTION':\n            return {\n                ...state,\n                transactions: [, ...state.transactions]\n            }\n        case 'TRANSACTION_ERROR':\n            return {\n                ...state,\n                error: action.payload\n            }\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}