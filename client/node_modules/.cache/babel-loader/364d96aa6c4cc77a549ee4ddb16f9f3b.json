{"ast":null,"code":"import _slicedToArray from\"/Users/lvn/Desktop/expensetracker-backend/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext}from'react';import{GlobalContext}from\"../context/GlobalState\";export var AddTransaction=function AddTransaction(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),text=_useState2[0],setText=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),amount=_useState4[0],setAmount=_useState4[1];var _useContext=useContext(GlobalContext),addTransaction=_useContext.addTransaction;var onSubmit=function onSubmit(e){e.preventDefault();var newTransaction={id:Math.floor(Math.random()*100000),text:text,amount:+amount};addTransaction(newTransaction);};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h3\",null,\" Add new transaction\"),/*#__PURE__*/React.createElement(\"form\",{onSubmit:onSubmit},/*#__PURE__*/React.createElement(\"div\",{className:\"form-control\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"text\"},\"Text\"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",value:text,onChange:function onChange(e){return setText(e.target.value);},placeholder:\"Enter Text\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-control\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"amount\"},\" Amount \",/*#__PURE__*/React.createElement(\"br\",null),\"(negative - expense, positive - income\"),/*#__PURE__*/React.createElement(\"input\",{type:\"number\",value:amount,onChange:function onChange(e){return setAmount(e.target.value);},placeholder:\"Enter amount...\"})),/*#__PURE__*/React.createElement(\"button\",{className:\"btn\"},\"Add Transaction\")));};export default AddTransaction;","map":{"version":3,"sources":["/Users/lvn/Desktop/expensetracker-backend/client/src/components/AddTransaction.js"],"names":["React","useState","useContext","GlobalContext","AddTransaction","text","setText","amount","setAmount","addTransaction","onSubmit","e","preventDefault","newTransaction","id","Math","floor","random","target","value"],"mappings":"uKAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,UAAzB,KAA0C,OAA1C,CACA,OAASC,aAAT,KAA8B,wBAA9B,CAEA,MAAO,IAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CAChC,cAAwBH,QAAQ,CAAC,EAAD,CAAhC,wCAAOI,IAAP,eAAaC,OAAb,eACA,eAA4BL,QAAQ,CAAC,CAAD,CAApC,yCAAOM,MAAP,eAAeC,SAAf,eAEA,gBAAyBN,UAAU,CAACC,aAAD,CAAnC,CAAOM,cAAP,aAAOA,cAAP,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAC,CAAC,CAAE,CAChBA,CAAC,CAACC,cAAF,GACA,GAAMC,CAAAA,cAAc,CAAE,CAClBC,EAAE,CAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgB,MAA3B,CADc,CAElBZ,IAAI,CAAJA,IAFkB,CAGlBE,MAAM,CAAE,CAACA,MAHS,CAAtB,CAMAE,cAAc,CAACI,cAAD,CAAd,CACH,CATD,CAUA,mBACI,4CACI,qDADJ,cAEI,4BAAM,QAAQ,CAAEH,QAAhB,eACI,2BAAK,SAAS,CAAC,cAAf,eACI,6BAAO,OAAO,CAAC,MAAf,SADJ,cAEI,6BAAO,IAAI,CAAC,MAAZ,CAAmB,KAAK,CAAEL,IAA1B,CAAgC,QAAQ,CAAE,kBAACM,CAAD,QAAOL,CAAAA,OAAO,CAACK,CAAC,CAACO,MAAF,CAASC,KAAV,CAAd,EAA1C,CAA0E,WAAW,CAAC,YAAtF,EAFJ,CADJ,cAMI,2BAAK,SAAS,CAAC,cAAf,eACI,6BAAO,OAAO,CAAC,QAAf,0BAAgC,8BAAhC,0CADJ,cAGI,6BAAO,IAAI,CAAC,QAAZ,CAAqB,KAAK,CAAEZ,MAA5B,CAAoC,QAAQ,CAAE,kBAACI,CAAD,QAAOH,CAAAA,SAAS,CAACG,CAAC,CAACO,MAAF,CAASC,KAAV,CAAhB,EAA9C,CAAgF,WAAW,CAAC,iBAA5F,EAHJ,CANJ,cAaI,8BAAQ,SAAS,CAAC,KAAlB,oBAbJ,CAFJ,CADJ,CAoBH,CApCM,CAsCP,cAAef,CAAAA,cAAf","sourcesContent":["import React, {useState, useContext} from 'react';\nimport { GlobalContext } from \"../context/GlobalState\";\n\nexport const AddTransaction = () => {\n    const [text, setText] = useState('');\n    const [amount, setAmount] = useState(0);\n\n    const {addTransaction} = useContext(GlobalContext);\n\n    const onSubmit = e=>{\n        e.preventDefault();\n        const newTransaction= {\n            id: Math.floor(Math.random() * 100000),\n            text,\n            amount: +amount\n        }\n\n        addTransaction(newTransaction);\n    }\n    return (\n        <div>\n            <h3> Add new transaction</h3>\n            <form onSubmit={onSubmit}>\n                <div className=\"form-control\">\n                    <label htmlFor=\"text\">Text</label>\n                    <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)} placeholder=\"Enter Text\" />\n\n                </div>\n                <div className=\"form-control\">\n                    <label htmlFor=\"amount\"> Amount <br/> \n                    (negative - expense, positive - income</label>\n                    <input type=\"number\" value={amount} onChange={(e) => setAmount(e.target.value)} placeholder=\"Enter amount...\">\n                        \n                    </input>\n                </div>\n                <button className=\"btn\">Add Transaction</button>\n            </form>\n        </div>\n    )\n}\n\nexport default AddTransaction;\n"]},"metadata":{},"sourceType":"module"}